<div class="xxx" id="xxx">Z:</div>
<%= turbo_stream_from :posts_list %>

<img src='<%= GlobalImages.relevant_images.sample %>'>
<%= GlobalImages.names.sample %>
<%= GlobalImages.relevant_images.sample.inspect %>

<span id="posts_count">
  <%= Post.count %>
</span>
<div id="posts">
  <% @posts.each do |post| %>
    <%= render post %>
    <p>
      <%= link_to "Show this post", post %>
    </p>
  <% end %>
</div>

<%# Button to Open Modal %>
<button type="button" class="btn btn-primary" id="newPostButton">
  New Post
</button>

<%#test post button%>
<%= button_tag "Show in Modal", class: "btn btn-secondary show-post-modal", data: { post_id: Post.last.id} %>

<%# Modal Frame %>
<%# Modal Frame %>
<%# New Post Modal %>
<%= turbo_frame_tag :index_new_post_modal do %>
  <div class="modal fade" id="newPostModal" tabindex="-1" aria-labelledby="newPostModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="newPostModalLabel">New Post</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="modalBody">
          <!-- Content will be loaded here dynamically -->
        </div>
      </div>
    </div>
  </div>
<% end %>

<%# Show Post Modal %>
<%# Show Post Modal %>
<%= turbo_frame_tag :show_post_modal do %>
  <div class="modal fade" id="showPostModal" tabindex="-1" aria-labelledby="showPostModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg"> <%# Wider Modal %>
      <div class="modal-content" style="background-color: #333; color: #fff; border-radius: 10px; width: 700px; height: 580px;">

        <!-- Modal Header -->
        <div class="modal-header" style="border-bottom: 1px solid #fff;">
          <h5 class="modal-title" id="showPostModalLabel" style="color: #fff;">Post Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="background-color: #666; color: #fff; border-radius: 50%;"></button>
        </div>

        <!-- Modal Body (Scrollable) -->
        <div class="modal-body" id="showPostBody" style="overflow-y: auto; max-height: 400px;">
          <%# Content dynamically loaded from show.html.erb %>
        </div>

        <!-- Modal Footer (Fixed Comments Form) -->
        <div class="modal-footer" style="background-color: #2e2e2e; padding: 10px;">
          <div id="xxxx" style="background-color: #444; padding: 10px; border-radius: 8px; width: 100%;">
            <!-- Turbo Frame for New Comment Form -->
            <%#= turbo_frame_tag :new_comment_form do %>
              <%# Content dynamically loaded here %>
            <%# end %>
          </div>
        </div>

      </div>
    </div>
  </div>
<% end %>





<script>
document.addEventListener('DOMContentLoaded', function () {
  const newPostModal = document.getElementById('newPostModal');
  const showPostModal = document.getElementById('showPostModal');
  const newPostBody = document.getElementById('modalBody');
  const showPostBody = document.getElementById('showPostBody');
  const newPostButton = document.getElementById('newPostButton');
  const bootstrapNewPostModal = new bootstrap.Modal(newPostModal);
  const bootstrapShowPostModal = new bootstrap.Modal(showPostModal);

  // Open modal and load "New Post" form
  newPostButton.addEventListener('click', function () {
    fetch('/posts/new')
      .then(response => response.text())
      .then(html => {
        newPostBody.innerHTML = html;
        bootstrapNewPostModal.show();
      })
      .catch(error => console.error('Error loading the form:', error));
  });

  // Event delegation for "Show Post" button
  document.body.addEventListener('click', function (event) {
    if (event.target.matches('.show-post-modal')) {
      const postId = event.target.dataset.postId;

      fetch(`/posts/${postId}`)
        .then(response => response.text())
        .then(html => {
          showPostBody.innerHTML = html;
          bootstrapShowPostModal.show();
        })
        .catch(error => console.error('Error loading the post:', error));
    }
  });

  // Clear modal content when closed
  newPostModal.addEventListener('hidden.bs.modal', function () {
    newPostBody.innerHTML = '';
  });

  showPostModal.addEventListener('hidden.bs.modal', function () {
    showPostBody.innerHTML = '';
  });

  // Close modal on successful form submission
  document.addEventListener('turbo:submit-end', function (event) {
    if (event.detail.success) {
      bootstrapNewPostModal.hide();
      bootstrapShowPostModal.hide();
    }
  });
});


</script>
